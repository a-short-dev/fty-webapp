// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  email          String        @unique
  firstName      String
  lastName       String
  emailVerified  DateTime?
  phone          String        @unique
  hashedPassword String
  role           Int           @default(1450)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  wallet         Wallet[]
  profile        Profile?
  Application    Application?
  Account        Account[]
  Transactions   Transactions?
  Log            Log?
}

model Profile {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  dob           DateTime
  bvn           String
  address       String
  lgaOrigin     String
  lgaCurrent    String
  nokName       String
  nokRelation   String
  nokNumber     String
  stateOfOrigin String
  maritalStatus String
  nationality   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Wallet {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  type    String
  balance String
  user    User   @relation(fields: [userId], references: [id])
  userId  String @unique @db.ObjectId
}

model Transactions {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
}

model Log {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
}

model Application {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  amount String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId
}
