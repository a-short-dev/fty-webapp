// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String    @unique
  firstName      String
  lastName       String
  phone          String    @unique
  hashedPassword String
  role           Int       @default(1450)
  emailVerified  DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts     Account[]
  wallets      Wallet[]
  transactions Transaction[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Wallet {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  userId      String        @db.ObjectId
  type        String
  balance     Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  User        User          @relation(fields: [userId], references: [id])
  Transaction Transaction[]
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  walletId  String   @db.ObjectId
  type      String
  amount    Int
  balance   Int
  status    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Wallet    Wallet   @relation(fields: [walletId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}
